# Bewerbung Generator - Environment Variables
# Copy this file to .env and fill in your personal information

# ============================================================================
# ABSENDER DATEN (Your personal information)
# ============================================================================

# Persönliche Daten
ABSENDER_VORNAME=Thomas Michael
ABSENDER_NACHNAME=Setz
ABSENDER_TITEL=Dr.

# Adresse
ABSENDER_STRASSE=Weierbacher Straße
ABSENDER_HAUSNUMMER=65A
ABSENDER_PLZ=55743
ABSENDER_ORT=Idar Oberstein
ABSENDER_LAND=Deutschland

# Kontakt
ABSENDER_TELEFON=06784 983051
ABSENDER_MOBIL=01726527863
ABSENDER_FAX=06784 983052
ABSENDER_EMAIL=thomas@setz.de

# Soziale Netzwerke (optional)
ABSENDER_LINKEDIN=
ABSENDER_XING=

# Persönliche Angaben für Lebenslauf
ABSENDER_GEBURTSDATUM=
ABSENDER_GEBURTSORT=
ABSENDER_GEBURTSJAHR=1963
ABSENDER_STAATSANGEHOERIGKEIT=deutsch
ABSENDER_FAMILIENSTAND=

# ============================================================================
# STANDARD TEXTBAUSTEINE (Will be replaced by AI-generated content later)
# ============================================================================

# Berufserfahrung (Placeholder - wird später durch AI ersetzt)
BERUFSERFAHRUNG=**Seit 2020** | Senior DevOps Engineer | TechCorp GmbH\n- Automatisierung von CI/CD-Pipelines\n- Container-Orchestrierung mit Kubernetes\n\n**2018-2020** | DevOps Engineer | StartupXYZ\n- Infrastructure as Code mit Terraform\n- Monitoring und Alerting

# Ausbildung
AUSBILDUNG=**2015-2018** | Master of Science Informatik | TU Berlin\nSchwerpunkt: Software Engineering und Systemarchitektur\n\n**2012-2015** | Bachelor of Science Informatik | TU München\nAbschlussnote: 1,5

# Fachkenntnisse
FACHKENNTNISSE=**Cloud Platforms:** AWS, Azure, Google Cloud\n**Container:** Docker, Kubernetes, OpenShift\n**Automation:** Terraform, Ansible, GitLab CI\n**Programming:** Python, Bash, Go\n**Monitoring:** Prometheus, Grafana, ELK Stack

# Sprachkenntnisse
SPRACHKENNTNISSE=**Deutsch:** Muttersprache\n**Englisch:** Verhandlungssicher (C2)\n**Spanisch:** Grundkenntnisse (A2)

# Zusätzliche Qualifikationen
ZUSAETZLICHE_QUALIFIKATIONEN=- AWS Certified Solutions Architect\n- Kubernetes Certified Administrator (CKA)\n- Scrum Master Zertifizierung\n- Führerschein Klasse B

# Interessen
INTERESSEN=Technologie-Trends, Open Source Projekte, Bergsteigen, Fotografie

# ============================================================================
# AKTUELLES DATUM
# ============================================================================
DATUM=24.06.2025

# ============================================================================
# AI PROVIDER CONFIGURATION
# ============================================================================

# AI Provider Selection: "auto", "claude", "llama", "sample"
# auto = try llama first, then claude, then sample
AI_PROVIDER=auto
AI_ENABLE_FALLBACK=true

# Claude API Configuration
# Get your API key from: https://console.anthropic.com/
# ANTHROPIC_API_KEY=WIRD_IN_.env.local gesetzt

# Ollama/Llama Configuration
OLLAMA_HOST=http://localhost:11434
LLAMA_MODEL=llama3.2:3b
LLAMA_TEMPERATURE=0.3
LLAMA_MAX_TOKENS=1000

# Note: To use Ollama locally:
# 1. Install Ollama: https://ollama.ai/
# 2. Start Ollama: ollama serve
# 3. Pull a model: ollama pull llama3.2:3b

# ============================================================================
# OUTPUT STRUCTURE CONFIGURATION
# ============================================================================

# Output structure: "legacy", "by_model", "both"
# legacy = flat structure (anschreiben.md in main folder)
# by_model = client-model subfolders (claude_sonnet-3-5/, llama_3-2-latest/, etc.)
# both = generate in both structures
OUTPUT_STRUCTURE=by_model

# Include generation metadata in each folder
INCLUDE_GENERATION_METADATA=true

# Generate documentation and regeneration scripts
GENERATE_DOCUMENTATION=true
GENERATE_REGENERATION_SCRIPTS=true

# ============================================================================
# TESTING CONFIGURATION
# ============================================================================

# Test regeneration scripts
TEST_REGENERATION=true
TEST_TIMEOUT=300  # 5 minutes max per test
TEST_COMPARE_MODE=content  # strict, content, structure
TEST_CLEAN_AFTER=true